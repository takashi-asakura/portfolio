$baseC: #000;
$mainC: #fff;
$accentC: rgb(212, 255, 0);

$mainF: "Archivo Black", sans-serif;

ul {
  padding: 0;
}
li {
  list-style: none;
}
.sub {
  color: $mainC;
  background: $baseC;
  cursor: none;
  margin: 0 5%;

  @import url(https://fonts.googleapis.com/css2?family=Archivo+Black&display=swap);

  #header {
    h1 {
      font-size: 12px;
      font-family: $mainF;
      text-transform: uppercase;
    }

    .h_info {
      li {
        text-align: right;
        a {
          font-family: $mainF;
          text-transform: uppercase;
          font-size: 70px;
          @media screen and (max-width: 767px) {
            font-size: 40px;
          }
        }
      }
    }
  }

  .copyright {
    text-align: center;
    font-family: $mainF;
    margin: 100px 0 50px;
  }

  .submain {
    text-align: center;
    font-family: $mainF;
    text-transform: uppercase;
    font-size: 70px;
  }
  .subcon {
    section {
      width: 100%;
      max-width: 1040px;
      margin: 0 auto;

      img {
        max-width: 100%;
        width: auto;
      }

      h3 {
        font-family: $mainF;
        text-transform: uppercase;
        font-size: 40px;

        span {
          display: block;
          font-size: 20px;
        }
      }

      p {
        line-height: 1.8;
      }
    }
  }
  #topcontrol {
    font-family: $mainF;
    text-transform: uppercase;
    font-size: 20px;
  }

  a {
    text-decoration: none;
    color: $mainC;
    transition: 0.1s;
  }

  // .glitch
  // .glitch
  // .glitch
  .glitch {
    color: white;
    font-size: 100px;
    position: relative;
    width: 100%;
    @media screen and (max-width: 767px) {
      font-size: 50px;
    }
  }
  @keyframes noise-anim {
    $steps: 20;
    @for $i from 0 through $steps {
      #{percentage($i*(1/$steps))} {
        clip: rect(random(100) + px, 9999px, random(100) + px, 0);
      }
    }
  }
  .glitch:after {
    content: attr(data-text);
    position: absolute;
    left: 2px;
    text-shadow: -1px 0 red;
    top: 0;
    color: white;
    background: black;
    overflow: hidden;
    clip: rect(0, 900px, 0, 0);
    animation: noise-anim 2s infinite linear alternate-reverse;
    width: 100%;
  }

  @keyframes noise-anim-2 {
    $steps: 20;
    @for $i from 0 through $steps {
      #{percentage($i*(1/$steps))} {
        clip: rect(random(100) + px, 9999px, random(100) + px, 0);
      }
    }
  }
  .glitch:before {
    content: attr(data-text);
    position: absolute;
    left: -2px;
    text-shadow: 1px 0 blue;
    top: 0;
    color: white;
    background: black;
    overflow: hidden;
    clip: rect(0, 900px, 0, 0);
    animation: noise-anim-2 3s infinite linear alternate-reverse;
    width: 100%;
  }
  // .glitch:hover,
  // .glitch:hover::before,
  // .glitch:hover::after {
  //   content: attr(data-text);
  //   font-size: 150px;
  // }

  // cursor
  // cursor
  // cursor

  body {
    cursor: none !important; /*もともとあるカーソルは非表示に*/
  }

  a:hover,
  label:hover,
  input:hover {
    cursor: none !important;
  }
  /*カーソル要素*/
  #cursor {
    position: fixed;

    /*丸の大きさと色の指定*/
    background: $mainC;
    border-radius: 10px;
    width: 20px;
    height: 20px;
    margin: -10px 0 0 -10px; /*真ん中にくるようにマイナスマージンで調整*/

    z-index: 100000000001; /*一番手前に来るように*/
    pointer-events: none; /*クリックできなくなるのを防ぐため。noneで対応*/
    opacity: 0;
    transition: transform 0.1s; /*アニメーションの秒数指定*/
  }

  /*ちょっと遅れてついてくるストーカー要素*/
  #stalker {
    position: fixed;

    /*丸の大きさと色の指定*/
    background: rgb(212, 255, 0);
    width: 60px;
    height: 60px;
    border-radius: 30px;
    margin: -30px 0 0 -30px; /*真ん中にくるようにマイナスマージンで調整*/
    z-index: 100000000000; /*カーソルの後ろに来るように*/
    pointer-events: none; /*クリックできなくなるのを防ぐため。noneで対応*/
    opacity: 0;
    transition: transform 0.5s; /*アニメーションの秒数指定*/
  }

  #cursor.active,
  #stalker.active {
    transform: scale(1.8);
  }

  // skill
  // skill
  // skill

  .skill-zone {
    font-family: $mainF;
    display: grid;
    gap: 30px;
    grid-template-columns: repeat(2, minmax(50px, 1fr));

    @media screen and (max-width: 767px) {
      grid-template-columns: repeat(1, minmax(50px, 1fr));
      gap: 0;
    }
  }
  /* スキル全体を囲うdiv */
  .skill {
    margin: 0px 0 0; /* 上下のマージンを指定 */
  }

  /* スキルの情報 */
  .skill-info {
    display: flex;
    justify-content: space-between;
    font-size: 16px;
    line-height: 1.5;
    margin-bottom: 10px;
    height: 50px;
    font-size: 20px;

    @media screen and (max-width: 767px) {
      line-height: 1;
    }
  }

  .skill-name {
    font-size: 24px;
  }

  /* スキルの熟練度（パーセンテージ） */
  .skill-percentage {
    opacity: 0; /* 初期状態では透明に */
    transition: opacity 0.6s;
  }

  /* スキルバーの親要素 */
  .skill-bar-container {
    position: relative;
    width: 100%;
    height: 15px; /* スキルバーの高さ */
    background-color: $mainC; /* スキルバーの背景色 */
    overflow: hidden;
    transform: skewX(30deg);
  }

  /* スキルバー本体 */
  .skill-bar {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 0; /* 初期状態では0 */
    background-color: $accentC; /* スキルバーの色 */
    transition: width 3s cubic-bezier(0.22, 1, 0.36, 1); /* スキルバーが伸びる速度を調整 */
  }

  .works_list {
    display: grid;
    gap: 30px;
    grid-template-columns: repeat(2, minmax(50px, 1fr));
    position: relative;

    @media screen and (max-width: 767px) {
      grid-template-columns: repeat(1, minmax(50px, 1fr));
    }

    li {
      overflow: hidden;
      img {
        transition: 0.4s;
        object-fit: cover;
      }
      a {
        display: block;
        transition: 0.4s;
        filter: grayscale(1);
        &:hover {
          filter: grayscale(0);

          img {
            transform: scale(1.05);
          }
        }

        @media screen and (max-width: 767px) {
          filter: grayscale(0);
        }
      }
    }
  }

  .btn {
    text-align: center;
    margin-top: 50px;
    a {
      display: block;
      max-width: 300px;
      width: 100%;
      padding: 10px 0;
      margin: 0 auto;
      background: $mainC;
      color: $baseC;
      font-family: $mainF;
      text-transform: uppercase;
      transition: 0.4s;
      border: 1px solid $mainC;
      font-size: 20px;

      &:hover {
        color: $mainC;
        background: $baseC;
      }
    }
  }

  .single_pager {
    text-align: center;
    margin-top: 50px;
    display: flex;
    justify-content: center;

    .next,
    .prev {
      margin: 0 20px;
      width: 100%;
    }
    a {
      display: block;
      max-width: 100px;
      width: 100%;
      padding: 10px;
      margin: 0 auto;
      background: $mainC;
      color: $baseC;
      font-family: $mainF;
      text-transform: uppercase;
      transition: 0.4s;
      border: 1px solid $mainC;
      font-size: 16px;
      font-weight: bold;

      &:hover {
        color: $mainC;
        background: $baseC;
      }
    }
  }
}
