.sub {
  color: white;
  background: #000;
  cursor: none;

  @import url(https://fonts.googleapis.com/css2?family=Archivo+Black&display=swap);

  #header {
    h1 {
      font-size: 12px;
      font-family: "Archivo Black", sans-serif;
      text-transform: uppercase;
    }

    .h_info {
      li {
        text-align: right;
        a {
          font-family: "Archivo Black", sans-serif;
          text-transform: uppercase;
          font-size: 70px;
          @media screen and (max-width: 767px) {
            font-size: 40px;
          }
        }
      }
    }
  }

  .copyright {
    text-align: center;
    font-family: "Archivo Black", sans-serif;
    margin: 100px 0 50px;
  }

  .submain {
    text-align: center;
    font-family: "Archivo Black", sans-serif;
    text-transform: uppercase;
    font-size: 70px;
  }
  .subcon {
    section {
      width: 100%;
      max-width: 1040px;
      margin: 0 auto;

      img {
        max-width: 100%;
        width: auto;
      }

      h3 {
        font-family: "Archivo Black", sans-serif;
        text-transform: uppercase;
        font-size: 40px;

        span {
          display: block;
          font-size: 20px;
        }
      }

      p {
        line-height: 1.8;
      }
    }
  }
  #topcontrol {
    font-family: "Archivo Black", sans-serif;
    text-transform: uppercase;
    font-size: 20px;
  }

  a {
    text-decoration: none;
    color: #fff;
    transition: 0.1s;
  }

  // .glitch
  // .glitch
  // .glitch
  .glitch {
    color: white;
    font-size: 100px;
    position: relative;
    width: 100%;
    @media screen and (max-width: 767px) {
      font-size: 50px;
    }
  }
  @keyframes noise-anim {
    $steps: 20;
    @for $i from 0 through $steps {
      #{percentage($i*(1/$steps))} {
        clip: rect(random(100) + px, 9999px, random(100) + px, 0);
      }
    }
  }
  .glitch:after {
    content: attr(data-text);
    position: absolute;
    left: 2px;
    text-shadow: -1px 0 red;
    top: 0;
    color: white;
    background: black;
    overflow: hidden;
    clip: rect(0, 900px, 0, 0);
    animation: noise-anim 2s infinite linear alternate-reverse;
    width: 100%;
  }

  @keyframes noise-anim-2 {
    $steps: 20;
    @for $i from 0 through $steps {
      #{percentage($i*(1/$steps))} {
        clip: rect(random(100) + px, 9999px, random(100) + px, 0);
      }
    }
  }
  .glitch:before {
    content: attr(data-text);
    position: absolute;
    left: -2px;
    text-shadow: 1px 0 blue;
    top: 0;
    color: white;
    background: black;
    overflow: hidden;
    clip: rect(0, 900px, 0, 0);
    animation: noise-anim-2 3s infinite linear alternate-reverse;
    width: 100%;
  }
  // .glitch:hover,
  // .glitch:hover::before,
  // .glitch:hover::after {
  //   content: attr(data-text);
  //   font-size: 150px;
  // }

  // cursor
  // cursor
  // cursor

  body {
    cursor: none !important; /*もともとあるカーソルは非表示に*/
  }

  a:hover,
  label:hover,
  input:hover {
    cursor: none !important;
  }
  /*カーソル要素*/
  #cursor {
    position: fixed;

    /*丸の大きさと色の指定*/
    background: #fff;
    border-radius: 10px;
    width: 20px;
    height: 20px;
    margin: -10px 0 0 -10px; /*真ん中にくるようにマイナスマージンで調整*/

    z-index: 100000000001; /*一番手前に来るように*/
    pointer-events: none; /*クリックできなくなるのを防ぐため。noneで対応*/
    opacity: 0;
    transition: transform 0.1s; /*アニメーションの秒数指定*/
  }

  /*ちょっと遅れてついてくるストーカー要素*/
  #stalker {
    position: fixed;

    /*丸の大きさと色の指定*/
    background: rgb(212, 255, 0);
    width: 60px;
    height: 60px;
    border-radius: 30px;
    margin: -30px 0 0 -30px; /*真ん中にくるようにマイナスマージンで調整*/
    z-index: 100000000000; /*カーソルの後ろに来るように*/
    pointer-events: none; /*クリックできなくなるのを防ぐため。noneで対応*/
    opacity: 0;
    transition: transform 0.5s; /*アニメーションの秒数指定*/
  }

  #cursor.active,
  #stalker.active {
    transform: scale(1.4);
  }
}
